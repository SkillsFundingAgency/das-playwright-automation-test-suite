parameters:
  - name: ServiceConnection
    type: string
  - name: Environment
    type: string
  - name: TestAssembly
    type: string


jobs:
- deployment: Deploy_AutomationTests
  displayName: 'Deploy Automation Tests to ${{ parameters.Environment }}'
  environment: ${{ parameters.Environment }}
  pool:
    vmImage: 'windows-latest'
  strategy:
    runOnce:
      deploy:
        steps:
          - checkout: self
            displayName: 'Checkout current branch'

          - checkout: das-platform-automation
            displayName: 'Checkout das-platform-automation'

          - task: DownloadBuildArtifacts@0
            displayName: 'Download build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.DefaultWorkingDirectory)'

          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: 'drop/tests.zip'
              destinationFolder: '$(System.DefaultWorkingDirectory)/drop/tests'

          - task: TotalALM.totalalm-tokenization.tokenization-build-task.Tokenization@2
            displayName: 'Tokenization: Transform file *.json'
            inputs:
              SourcePath: '$(System.DefaultWorkingDirectory)/drop/tests'
              TargetFileNames: '*.json'

          - task: PowerShell@2
            displayName: 'Update NumberOfTestWorkers'
            inputs:
              targetType: 'filePath'
              filePath: '$(System.DefaultWorkingDirectory)/drop/src/UpdateNoofTestWorkers.ps1'
              arguments: '-browser $(BROWSER_TYPE)'

          - task: TotalALM.totalalm-tokenization.tokenization-build-task.Tokenization@2
            displayName: 'Tokenization: Transform file *.runsettings'
            inputs:
              SourcePath: '$(System.DefaultWorkingDirectory)/drop/runsettings/src/'
              TargetFileNames: '*.runsettings'

          - task: PowerShell@2
            displayName: 'Install Playwright Browsers'
            inputs:
              targetType: 'filePath'
              filePath: '$(System.DefaultWorkingDirectory)/drop/tests/SFA.DAS.Campaigns.UITests/playwright.ps1'
              arguments: install

          - task: ms-autotest.screen-resolution-utility-task.screen-resolution-utlity-task.ScreenResolutionUtility@1
            displayName: 'Set Screen Resolution'
            inputs:
              displaySettings: specific
              width: 1920
              height: 1080

          - task: VSTest@2
            displayName: 'VsTest - Test Execution'
            inputs:
              testAssemblyVer2: ${{ parameters.TestAssembly }}
              searchFolder: '$(System.DefaultWorkingDirectory)/drop/tests/'
              testFiltercriteria: '"$(TestCategory)&TestCategory!=ignoreinpp&TestCategory!=accessibility"'
              runSettingsFile: '$(System.DefaultWorkingDirectory)/drop/runsettings/src/Parellel.runsettings'
              runInParallel: true
              otherConsoleOptions: '/logger:trx'
              rerunFailedTests: true
              rerunType: basedOnTestFailureCount
              rerunMaxAttempts: 2
            continueOnError: true

          - task: PowerShell@2
            displayName: 'Check .trx File Exists'
            inputs:
              targetType: 'filePath'
              filePath: '$(System.DefaultWorkingDirectory)/drop/src/Check-TestResults.ps1'
              arguments: '-SourcePath "$(Agent.TempDirectory)/TestResults"'
