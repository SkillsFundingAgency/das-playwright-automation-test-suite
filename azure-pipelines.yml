trigger:
  batch: true
  branches:
    include:
      - "*"

workspace:
    clean: all

variables:
  buildConfiguration: 'release'

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/tags/2.1.28
    endpoint: SkillsFundingAgency

pool:
  vmImage: 'windows-latest'

steps:
- template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: dotnet unit test
  inputs:
    command: 'test'
    arguments: '--filter "TestCategory=Unittests" --logger trx;logfilename=UnittestResults.trx'
    projects: 'src/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    projects: 'src/**/*.csproj'
    packDirectory: '$(build.artifactstagingdirectory)/publish'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    zipAfterPublish: false
    projects: 'src/**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/tests --no-restore --no-build'

- task: CopyFiles@2
  displayName: 'Copy plain files to: $(build.artifactstagingdirectory)/tests/files'
  inputs:
    Contents: |     
     src/**/*.sql
     src/**/html2canvas.js
     src/**/appsettings.Config.json
     src/**/appsettings.AdminConfig.json
     src/**/appsettings.ProviderConfig.json
     src/**/appsettings.TimeOutConfig.json
     src/**/appsettings.TestExecution.json
     src/**/appsettings.NServiceBusConfig.json
     src/**/appsettings.BrowserStack.json
     src/**/appsettings.ApiFramework.json
    TargetFolder: '$(build.artifactstagingdirectory)/tests/files'
    flattenFolders: true
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy project json files to: $(build.artifactstagingdirectory)/tests/'
  inputs:
    Contents: |     
     src/**/appsettings.Project.json
    TargetFolder: '$(build.artifactstagingdirectory)/tests/'
    flattenFolders: false
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy Check-TestResults.ps1 to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
     src/**/Check-TestResults.ps1
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy UpdateNoofTestWorkers.ps1 to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     src/**/UpdateNoofTestWorkers.ps1
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy runsettings to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
      src/**/*.runsettings
    TargetFolder: '$(build.artifactstagingdirectory)/publish/runsettings'
    OverWrite: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)/tests'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactstagingdirectory)/publish/tests.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    pathtoPublish: '$(build.artifactstagingdirectory)/publish'